// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fruit.proto

package fruit

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Fruit struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Worker               string   `protobuf:"bytes,2,opt,name=worker,proto3" json:"worker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Fruit) Reset()         { *m = Fruit{} }
func (m *Fruit) String() string { return proto.CompactTextString(m) }
func (*Fruit) ProtoMessage()    {}
func (*Fruit) Descriptor() ([]byte, []int) {
	return fileDescriptor_fruit_2b748dfcfaad894c, []int{0}
}
func (m *Fruit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fruit.Unmarshal(m, b)
}
func (m *Fruit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fruit.Marshal(b, m, deterministic)
}
func (dst *Fruit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fruit.Merge(dst, src)
}
func (m *Fruit) XXX_Size() int {
	return xxx_messageInfo_Fruit.Size(m)
}
func (m *Fruit) XXX_DiscardUnknown() {
	xxx_messageInfo_Fruit.DiscardUnknown(m)
}

var xxx_messageInfo_Fruit proto.InternalMessageInfo

func (m *Fruit) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Fruit) GetWorker() string {
	if m != nil {
		return m.Worker
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_fruit_2b748dfcfaad894c, []int{1}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Fruit)(nil), "fruit.Fruit")
	proto.RegisterType((*Empty)(nil), "fruit.Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FruitCollectorClient is the client API for FruitCollector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FruitCollectorClient interface {
	Deliver(ctx context.Context, in *Fruit, opts ...grpc.CallOption) (*Empty, error)
}

type fruitCollectorClient struct {
	cc *grpc.ClientConn
}

func NewFruitCollectorClient(cc *grpc.ClientConn) FruitCollectorClient {
	return &fruitCollectorClient{cc}
}

func (c *fruitCollectorClient) Deliver(ctx context.Context, in *Fruit, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/fruit.FruitCollector/Deliver", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FruitCollectorServer is the server API for FruitCollector service.
type FruitCollectorServer interface {
	Deliver(context.Context, *Fruit) (*Empty, error)
}

func RegisterFruitCollectorServer(s *grpc.Server, srv FruitCollectorServer) {
	s.RegisterService(&_FruitCollector_serviceDesc, srv)
}

func _FruitCollector_Deliver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Fruit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FruitCollectorServer).Deliver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fruit.FruitCollector/Deliver",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FruitCollectorServer).Deliver(ctx, req.(*Fruit))
	}
	return interceptor(ctx, in, info, handler)
}

var _FruitCollector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fruit.FruitCollector",
	HandlerType: (*FruitCollectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Deliver",
			Handler:    _FruitCollector_Deliver_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fruit.proto",
}

func init() { proto.RegisterFile("fruit.proto", fileDescriptor_fruit_2b748dfcfaad894c) }

var fileDescriptor_fruit_2b748dfcfaad894c = []byte{
	// 134 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x2b, 0x2a, 0xcd,
	0x2c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0x8c, 0xb9, 0x58, 0xdd,
	0x40, 0x0c, 0x21, 0x21, 0x2e, 0x96, 0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce,
	0x20, 0x30, 0x5b, 0x48, 0x8c, 0x8b, 0xad, 0x3c, 0xbf, 0x28, 0x3b, 0xb5, 0x48, 0x82, 0x09, 0x2c,
	0x0a, 0xe5, 0x29, 0xb1, 0x73, 0xb1, 0xba, 0xe6, 0x16, 0x94, 0x54, 0x1a, 0x59, 0x72, 0xf1, 0x81,
	0x75, 0x3b, 0xe7, 0xe7, 0xe4, 0xa4, 0x26, 0x97, 0xe4, 0x17, 0x09, 0xa9, 0x73, 0xb1, 0xbb, 0xa4,
	0xe6, 0x64, 0x96, 0xa5, 0x16, 0x09, 0xf1, 0xe8, 0x41, 0xec, 0x03, 0xab, 0x90, 0x82, 0xf1, 0xc0,
	0x1a, 0x95, 0x18, 0x92, 0xd8, 0xc0, 0xce, 0x30, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xc9, 0xbb,
	0x55, 0x7f, 0x95, 0x00, 0x00, 0x00,
}
