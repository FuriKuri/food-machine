// Code generated by protoc-gen-go. DO NOT EDIT.
// source: food.proto

package food

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Food struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Worker               string   `protobuf:"bytes,2,opt,name=worker,proto3" json:"worker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Food) Reset()         { *m = Food{} }
func (m *Food) String() string { return proto.CompactTextString(m) }
func (*Food) ProtoMessage()    {}
func (*Food) Descriptor() ([]byte, []int) {
	return fileDescriptor_food_bb525761fbbb212e, []int{0}
}
func (m *Food) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Food.Unmarshal(m, b)
}
func (m *Food) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Food.Marshal(b, m, deterministic)
}
func (dst *Food) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Food.Merge(dst, src)
}
func (m *Food) XXX_Size() int {
	return xxx_messageInfo_Food.Size(m)
}
func (m *Food) XXX_DiscardUnknown() {
	xxx_messageInfo_Food.DiscardUnknown(m)
}

var xxx_messageInfo_Food proto.InternalMessageInfo

func (m *Food) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Food) GetWorker() string {
	if m != nil {
		return m.Worker
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_food_bb525761fbbb212e, []int{1}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Food)(nil), "food.Food")
	proto.RegisterType((*Empty)(nil), "food.Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FoodCollectorClient is the client API for FoodCollector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FoodCollectorClient interface {
	Deliver(ctx context.Context, in *Food, opts ...grpc.CallOption) (*Empty, error)
}

type foodCollectorClient struct {
	cc *grpc.ClientConn
}

func NewFoodCollectorClient(cc *grpc.ClientConn) FoodCollectorClient {
	return &foodCollectorClient{cc}
}

func (c *foodCollectorClient) Deliver(ctx context.Context, in *Food, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/food.FoodCollector/Deliver", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FoodCollectorServer is the server API for FoodCollector service.
type FoodCollectorServer interface {
	Deliver(context.Context, *Food) (*Empty, error)
}

func RegisterFoodCollectorServer(s *grpc.Server, srv FoodCollectorServer) {
	s.RegisterService(&_FoodCollector_serviceDesc, srv)
}

func _FoodCollector_Deliver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Food)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FoodCollectorServer).Deliver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food.FoodCollector/Deliver",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FoodCollectorServer).Deliver(ctx, req.(*Food))
	}
	return interceptor(ctx, in, info, handler)
}

var _FoodCollector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "food.FoodCollector",
	HandlerType: (*FoodCollectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Deliver",
			Handler:    _FoodCollector_Deliver_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "food.proto",
}

func init() { proto.RegisterFile("food.proto", fileDescriptor_food_bb525761fbbb212e) }

var fileDescriptor_food_bb525761fbbb212e = []byte{
	// 135 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0xcb, 0xcf, 0x4f,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x8c, 0xb8, 0x58, 0xdc, 0xf2,
	0xf3, 0x53, 0x84, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38,
	0x83, 0xc0, 0x6c, 0x21, 0x31, 0x2e, 0xb6, 0xf2, 0xfc, 0xa2, 0xec, 0xd4, 0x22, 0x09, 0x26, 0xb0,
	0x28, 0x94, 0xa7, 0xc4, 0xce, 0xc5, 0xea, 0x9a, 0x5b, 0x50, 0x52, 0x69, 0x64, 0xca, 0xc5, 0x0b,
	0xd2, 0xec, 0x9c, 0x9f, 0x93, 0x93, 0x9a, 0x5c, 0x92, 0x5f, 0x24, 0xa4, 0xc2, 0xc5, 0xee, 0x92,
	0x9a, 0x93, 0x59, 0x96, 0x5a, 0x24, 0xc4, 0xa5, 0x07, 0xb6, 0x0b, 0x24, 0x2f, 0xc5, 0x0d, 0x61,
	0x83, 0x35, 0x29, 0x31, 0x24, 0xb1, 0x81, 0x1d, 0x60, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xbd,
	0x00, 0x52, 0x0a, 0x8e, 0x00, 0x00, 0x00,
}
